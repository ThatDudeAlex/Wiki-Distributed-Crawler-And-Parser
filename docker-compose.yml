services:
  rabbitmq_crawler:
    image: rabbitmq:3-management
    restart: unless-stopped
    ports:
      - "15672:15672"
      - "5672:5672"
    environment:
      RABBITMQ_DEFAULT_USER: "${RABBITMQ_USER}"
      RABBITMQ_DEFAULT_PASS: "${RABBITMQ_PASSWORD}"

  rabbitmq_parser:
    image: rabbitmq:3-management
    restart: unless-stopped
    ports:
      - "15673:15672"
      - "5673:5672"
    environment:
      RABBITMQ_DEFAULT_USER: "${RABBITMQ_USER}"
      RABBITMQ_DEFAULT_PASS: "${RABBITMQ_PASSWORD}"

  redis_visited:
    image: redis:alpine
    restart: unless-stopped
    ports:
      - "6379:6379"

  redis_enqueued:
    image: redis:alpine
    restart: unless-stopped
    ports:
      - "6380:6379"

  postgres:
    image: postgres:16
    container_name: db_distributed_crawler
    restart: unless-stopped
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"

  # prometheus:
  #   image: prom/prometheus
  #   restart: unless-stopped
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #   ports:
  #     - "9090:9090"

  grafana:
    image: grafana/grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana

volumes:
  pg_data:
  grafana_data:
