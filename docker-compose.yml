# TODO: adjust after crawler refactoring
x-crawler-common: &crawler-common
  build:
    context: .
    dockerfile: crawler/Dockerfile
  depends_on:
    - postgres
    - db_init
    - rabbitmq
    - redis
  env_file: .env
  command: [ "python", "-m", "crawler.crawler_worker" ]
  volumes:
    - compressed_html_data:${DL_HTML_PATH}
  environment:
    - NO_PROXY=localhost,127.0.0.1,rabbitmq,redis,postgres,192.168.0.0/16

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: unless-stopped
    env_file: .env
    ports:
      - "15672:15672"
      - "5672:5672"
    environment:
      RABBITMQ_DEFAULT_USER: "${RABBITMQ_USER}"
      RABBITMQ_DEFAULT_PASS: "${RABBITMQ_PASSWORD}"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  rabbitmq_seeder:
    container_name: rabbitmq_seeder
    build:
      context: .
      dockerfile: components/rabbitmq_seeder/Dockerfile
    env_file: .env
    depends_on:
      - rabbitmq
    command: [ "python", "-m", "components.rabbitmq_seeder.main" ]
  # postgres:
  #   image: postgres:16
  #   container_name: postgres
  #   restart: unless-stopped
  #   environment:
  #     POSTGRES_DB: "${POSTGRES_DB}"
  #     POSTGRES_USER: "${POSTGRES_USER}"
  #     POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
  #   volumes:
  #     - pg_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"

  # postgres_initiator:
  #   container_name: postgres_initiator
  #   build:
  #     context: .
  #     dockerfile: components/postgres_initiator/Dockerfile
  #   depends_on:
  #     - postgres
  #   env_file: .env # Only used in local dev
  #   command: [ "python", "-m", "components.postgres_initiator.main" ]
  # redis:
  #   image: redis:alpine
  #   container_name: redis
  #   restart: unless-stopped
  #   ports:
  #     - "6379:6379"
  # crawler_noproxy:
  #   <<: *crawler-common
  # California Proxies
  # crawler_la:
  #   <<: *crawler-common
  #   environment:
  #     - HTTP_PROXY=${CA_LA1_PROXY}
  #     - HTTPS_PROXY=${CA_LA1_PROXY}

  # crawler_santa_cruz:
  #   <<: *crawler-common
  #   environment:
  #     - HTTP_PROXY=${CA_SANTA_CRUZ1_PROXY}
  #     - HTTPS_PROXY=${CA_SANTA_CRUZ1_PROXY}

  # # Florida Proxies
  # crawler_boca_raton:
  #   <<: *crawler-common
  #   environment:
  #     - HTTP_PROXY=${FL_BOCA_RATON_PROXY}
  #     - HTTPS_PROXY=${FL_BOCA_RATON_PROXY}

  # # Nevada
  # crawler_las_vegas:
  #   <<: *crawler-common
  #   environment:
  #     - HTTP_PROXY=${NV_LAS_VEGAS1_PROXY}
  #     - HTTPS_PROXY=${NV_LAS_VEGAS1_PROXY}

  # # New York Proxies
  # crawler_buffalo:
  #   <<: *crawler-common
  #   environment:
  #     - HTTP_PROXY=${NY_BUFFALO1_PROXY}
  #     - HTTPS_PROXY=${NY_BUFFALO1_PROXY}

  # crawler_nyc:
  #   <<: *crawler-common
  #   environment:
  #     - HTTP_PROXY=${NY_NEW_YORK1_PROXY}
  #     - HTTPS_PROXY=${NY_NEW_YORK1_PROXY}

  # # Texas Proxies
  # crawler_dallas:
  #   <<: *crawler-common
  #   environment:
  #     - HTTP_PROXY=${TX_DALLAS1_PROXY}
  #     - HTTPS_PROXY=${TX_DALLAS1_PROXY}

  # crawler_victoria:
  #   <<: *crawler-common
  #   environment:
  #     - HTTP_PROXY=${TX_VICTORIA1_PROXY}
  #     - HTTPS_PROXY=${TX_VICTORIA1_PROXY}

  # # Virginia Proxies
  # crawler_ashburn:
  #   <<: *crawler-common
  #   environment:
  #     - HTTP_PROXY=${VA_ASHBURN1_PROXY}
  #     - HTTPS_PROXY=${VA_ASHBURN1_PROXY}

  # crawler_reston:
  #   <<: *crawler-common
  #   environment:
  #     - HTTP_PROXY=${VA_RESTON1_PROXY}
  #     - HTTPS_PROXY=${VA_RESTON1_PROXY}
  # parser:
  #   build:
  #     context: .
  #     dockerfile: parser/Dockerfile
  #   depends_on:
  #     - postgres
  #     - db_init
  #     - rabbitmq
  #   env_file: .env
  #   command: [ "python", "-m", "parser.parser" ]
  #   volumes:
  #     - compressed_html_data:${DL_HTML_PATH}

  # db_service:
  #   build:
  #     context: .
  #     dockerfile: database_service/Dockerfile
  #   env_file: .env
  #   depends_on:
  #     - rabbitmq
  #     - postgres
  #   command: [ "python", "-m", "database_service.db_service" ]
  # ===========================================
  # Testing services for proxies/vpn services
  # ===========================================

  # testapp:
  #   image: curlimages/curl
  #   container_name: testapp
  # environment:
  #   - HTTP_PROXY=${TX_DALLAS2_PROXY}
  #   - HTTPS_PROXY=${TX_DALLAS2_PROXY}
  #   - NO_PROXY=localhost,127.0.0.1,rabbitmq,redis,postgres,192.168.0.0/16
  # command: [ "curl", "-sS", "https://am.i.mullvad.net/json" ]
  # command: [ "curl", "-sS", "http://192.168.86.15:15672/" ]

volumes:
  pg_data:
  compressed_html_data:
  rabbitmq_data:
    driver: local
